spring.application.name=order-service

server.port=4444
#properties - eureka-client
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true		
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
			
spring.datasource.url=jdbc:mysql://localhost:3306/order-service-db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Dhaya@123
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.format-sql=true



spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Default circuit breaker configuration
spring.cloud.circuitbreaker.resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
spring.cloud.circuitbreaker.resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
spring.cloud.circuitbreaker.resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s

# Assign default config to "customerService"
spring.cloud.circuitbreaker.resilience4j.circuitbreaker.instances.customerService.baseConfig=default

# Enable exposure of specific actuator endpoints (health, metrics, prometheus)
management.endpoints.web.exposure.include=health,metrics,prometheus,info
# Enable Spring Boot Actuator
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
# Enable Prometheus Metrics
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Zipkin endpoint (default port 9411)
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Sampling probability (1.0 = 100% of requests traced)
management.tracing.sampling.probability=1.0

# Enable distributed tracing with Brave
management.tracing.enabled=true


spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

spring.output.ansi.enabled= always


spring.kafka.producer.properties.spring.json.trusted.packages="com.example.order_service.model.Order"

spring.kafka.producer.properties.spring.json.type.mapping=order:com.example.order_service.model.Order


spring.kafka.producer.properties.spring.json.add.type.headers=false